buildscript {
    ext {
        gradle_version = '4.8.1'
        kotlin_version = '1.2.60'
        gson_version = '2.8.2'
        arrow_version = '0.7.3'
        javaVersion = JavaVersion.VERSION_1_7
    }

    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
    }

    dependencies {
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0'
        classpath 'org.ajoberstar:gradle-git-publish:0.3.2'
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.2"
    }
}

plugins {
    id "io.gitlab.arturbosch.detekt" version "1.0.0.RC7-3"
    id "org.sonarqube" version "2.6.2"
}

detekt {
    version = "1.0.0.RC7-3"
    defaultProfile {
        config = file("detekt-config.yml")
        input = "$projectDir"
        filters = ".*/resources/.*,.*/build/.*"
        output = file("reports")
        outputName = "detekt"
        parallel = true
    }
}

allprojects {
    repositories {
        jcenter()
        maven { url 'https://oss.jfrog.org/oss-snapshot-local/' }
        maven { url 'https://kotlin.bintray.com/kotlinx' }
        maven { url "http://dl.bintray.com/kotlin/kotlin-dev" }
        maven { url "http://dl.bintray.com/arrow-kt/arrow-kt" }
        maven { url "https://dl.bintray.com/jetbrains/markdown/" }
        maven { url 'https://jitpack.io' }
    }

    apply plugin: 'kotlin'
    apply plugin: 'java'
    apply plugin: 'jacoco'

    jacoco {
        toolVersion '0.8.1'
    }

    task codeCoverageReport(type: JacocoReport) {
        reports {
            xml.enabled true
            xml.destination file("${buildDir}/reports/jacoco/report.xml")
            html.enabled true
            csv.enabled false
        }

        classDirectories = fileTree(
                dir: 'build/classes/kotlin/main',
        )

        sourceDirectories = files('src/main/kotlin')
        executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")
    }
}

task wrapper(type: Wrapper) {
    distributionUrl = "https://services.gradle.org/distributions/gradle-${project.ext.gradle_version}-all.zip"
}