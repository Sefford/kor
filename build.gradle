buildscript {
    ext {
        gradle_version = '4.7'
        kotlin_version = '1.2.40'
        gson_version = '2.8.2'
        arrow_version = '0.7.1'
        javaVersion = JavaVersion.VERSION_1_7
    }

    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
    }

    dependencies {
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0'
        classpath 'org.ajoberstar:gradle-git-publish:0.3.2'
    }
}

allprojects {
    repositories {
        jcenter()
        maven { url 'https://oss.jfrog.org/oss-snapshot-local/' }
        maven { url 'https://kotlin.bintray.com/kotlinx' }
        maven { url "http://dl.bintray.com/kotlin/kotlin-dev" }
        maven { url "http://dl.bintray.com/arrow-kt/arrow-kt" }
        maven { url "https://dl.bintray.com/jetbrains/markdown/" }
        maven { url 'https://jitpack.io' }
    }
}

subprojects { project ->

    group = GROUP
    version = VERSION_NAME

    apply plugin: 'kotlin'
    apply plugin: 'jacoco'

    archivesBaseName = POM_ARTIFACT_ID

    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: 'jacoco'

    jacoco {
        toolVersion '0.8.1'
    }

    task codeCoverageReport(type: JacocoReport) {
        reports {
            xml.enabled true
            xml.destination file("${buildDir}/reports/jacoco/report.xml")
            html.enabled true
            csv.enabled false
        }

        classDirectories = fileTree(
                dir: 'build/classes/kotlin/main',
        )

        sourceDirectories = files('src/main/kotlin')
        executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")
    }

    apply plugin: 'com.jfrog.bintray'

    bintray {
        publish = true
        user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
        key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
        configurations = ['archives']
        pkg {
            repo = 'kor'
            name = project.name
            userOrg = POM_DEVELOPER_ID
            licenses = ['Apache-2.0']
            vcsUrl = 'https://github.com/arrow-kt/arrow.git'
        }
    }

    compileKotlin.kotlinOptions.freeCompilerArgs += ["-Xskip-runtime-version-check"]

    test {
        testLogging {
            events "passed", "skipped", "failed", "standardOut", "standardError"
        }
    }

    tasks.withType(Test) {
        maxParallelForks = Runtime.runtime.availableProcessors()
    }

    build.dependsOn ':detekt'

    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
}

task wrapper(type: Wrapper) {
    distributionUrl = "https://services.gradle.org/distributions/gradle-${project.ext.gradle_version}-all.zip"
}

